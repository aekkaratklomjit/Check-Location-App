{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\Check-Location-App\\\\src\\\\screens\\\\GetMyLocation.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { addCurrentLocation } from \"../actions\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetMyLocation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getLocation = async () => {\n      let promise = new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      let pos = await promise;\n      let data = {\n        id: Date.now(),\n        longitude: pos.coords.longitude,\n        latitude: pos.coords.latitude\n      };\n      this.props.dispatch({\n        type: \"ADD_CURRENT_LOCATION\",\n        data\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.getLocation(),\n        children: \"Getlocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), this.props.blogsCurrentLocation.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-getLocation\",\n          children: [\"Current Location\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), \"Latitude: \", item.latitude, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }, this), \"Longitude: \", item.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const blogsCurrentLocation = _.map(state.blogsCurrentLocation, (val, key) => {\n    return { ...val,\n      key: key\n    };\n  });\n\n  return {\n    blogsCurrentLocation\n  };\n};\n\nexport default connect(mapStateToProps)(GetMyLocation);","map":{"version":3,"sources":["D:/Learning/React/Check-Location-App/src/screens/GetMyLocation.js"],"names":["React","Component","Button","connect","addCurrentLocation","_","GetMyLocation","getLocation","promise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","data","id","Date","now","longitude","coords","latitude","props","dispatch","type","render","blogsCurrentLocation","map","item","mapStateToProps","state","val","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,kBAAR,QAAiC,YAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;;AACA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpCM,WADoC,GACtB,YAAY;AACxB,UAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnDC,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;AACD,OAFa,CAAd;AAGA,UAAII,GAAG,GAAG,MAAMP,OAAhB;AACA,UAAIQ,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADK;AAETC,QAAAA,SAAS,EAAEL,GAAG,CAACM,MAAJ,CAAWD,SAFb;AAGTE,QAAAA,QAAQ,EAAEP,GAAG,CAACM,MAAJ,CAAWC;AAHZ,OAAX;AAKA,WAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,sBADY;AAElBT,QAAAA;AAFkB,OAApB;AAID,KAfmC;AAAA;;AAgBpCU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKnB,WAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EASG,KAAKgB,KAAL,CAAWI,oBAAX,CAAgCC,GAAhC,CAAqCC,IAAD,iBACnC;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,sDAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,gBAGaA,IAAI,CAACP,QAHlB,oBAG4B;AAAA;AAAA;AAAA;AAAA,kBAH5B,iBAIcO,IAAI,CAACT,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAvCmC;;AAyCtC,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMJ,oBAAoB,GAAGtB,CAAC,CAACuB,GAAF,CAAMG,KAAK,CAACJ,oBAAZ,EAAkC,CAACK,GAAD,EAAMC,GAAN,KAAc;AAC3E,WAAO,EACL,GAAGD,GADE;AAELC,MAAAA,GAAG,EAAEA;AAFA,KAAP;AAID,GAL4B,CAA7B;;AAMA,SAAO;AACLN,IAAAA;AADK,GAAP;AAGD,CAVD;;AAWA,eAAexB,OAAO,CAAC2B,eAAD,CAAP,CAAyBxB,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport {addCurrentLocation} from \"../actions\"\r\nimport _ from \"lodash\";\r\nclass GetMyLocation extends Component {\r\n  getLocation = async () => {\r\n    let promise = new Promise(function (resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n    let pos = await promise;\r\n    let data = {\r\n      id: Date.now(),\r\n      longitude: pos.coords.longitude,\r\n      latitude: pos.coords.latitude,\r\n    };\r\n    this.props.dispatch({\r\n      type: \"ADD_CURRENT_LOCATION\",\r\n      data,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => this.getLocation()}\r\n        >\r\n          Getlocation\r\n        </Button>\r\n        {this.props.blogsCurrentLocation.map((item) => (\r\n          <div>\r\n            <h2 className=\"font-getLocation\">\r\n              Current Location\r\n              <br />\r\n              Latitude: {item.latitude} <br />\r\n              Longitude: {item.longitude}\r\n            </h2>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const blogsCurrentLocation = _.map(state.blogsCurrentLocation, (val, key) => {\r\n    return {\r\n      ...val,\r\n      key: key,\r\n    };\r\n  });\r\n  return {\r\n    blogsCurrentLocation,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(GetMyLocation);\r\n"]},"metadata":{},"sourceType":"module"}