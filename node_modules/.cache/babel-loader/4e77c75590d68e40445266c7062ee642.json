{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\check-location\\\\src\\\\screens\\\\CheckLocation.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckLocation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checklocation = () => {\n      console.log(this.props.currentLocation.length);\n      console.log(this.props.Location.length);\n\n      if (this.props.Location.length == 4 && this.props.currentLocation.length !== 0) {\n        alert('Pass');\n      } else {\n        alert('Failed');\n      } //     if (this.state.location.length==4&&this.state.currentLocation.length!==0){\n      //     const SortLatitude=[];\n      //     const SortLongitude=[];\n      //     this.state.location\n      //     .sort(({ latitude: previousLaitude }, { latitude: currentLaitude }) => previousLaitude - currentLaitude)\n      //     .map((item)=>{\n      //        SortLatitude.push(item.latitude)\n      //     })\n      //     this.state.location\n      //     .sort(({ longitude: previousLongitude }, { longitude: currentLongitude }) => previousLongitude - currentLongitude)\n      //     .map((item)=>{\n      //        SortLongitude.push(item.longitude)\n      //     })\n      //     console.log('My Location latituide is '+this.state.currentLocation[0]+'longitude is '+this.state.currentLocation[0].longitude)\n      //     console.log('Shorest latitude is '+SortLatitude[0]+' far latitude is '+ SortLatitude[3])\n      //     console.log('Shorest long is '+SortLongitude[0]+' far long is '+ SortLongitude[3])\n      //    if (this.state.currentLocation[0].latitude>SortLatitude[0]&&\n      //        this.state.currentLocation[0].latitude<SortLatitude[3]&&\n      //        this.state.currentLocation[0].longitude>SortLongitude[0]&&\n      //        this.state.currentLocation[0].longitude<SortLongitude[3]) {\n      //          alert('Your position is close to the scope of the company.')\n      //      }else{\n      //          alert('Your position is not close to the scope of the company.')\n      //    }\n      // }else{\n      //     alert('Please add location or getLocation')\n      // }\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => this.checklocation(),\n        children: \"Check-Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const currentLocation = _.map(state.blogsCurrentLocation, (val, key) => {\n    return { ...val,\n      key: key\n    };\n  });\n\n  const Location = _.map(state.blogsLocation, (val, key) => {\n    return { ...val,\n      key: key\n    };\n  });\n\n  return {\n    currentLocation,\n    Location\n  };\n};\n\nexport default connect(mapStateToProps)(CheckLocation);","map":{"version":3,"sources":["D:/Learning/React/check-location/src/screens/CheckLocation.js"],"names":["React","Component","Button","connect","_","CheckLocation","checklocation","console","log","props","currentLocation","length","Location","alert","render","mapStateToProps","state","map","blogsCurrentLocation","val","key","blogsLocation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AACA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAClCK,aADkC,GACpB,MAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAAvC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWG,QAAX,CAAoBD,MAAhC;;AACA,UAAG,KAAKF,KAAL,CAAWG,QAAX,CAAoBD,MAApB,IAA4B,CAA5B,IAA+B,KAAKF,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,KAAoC,CAAtE,EAAwE;AACpEE,QAAAA,KAAK,CAAC,MAAD,CAAL;AACH,OAFD,MAEK;AAACA,QAAAA,KAAK,CAAC,QAAD,CAAL;AAAgB,OALR,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,KAlCkC;AAAA;;AAmClCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAC,WAA7B;AAAyC,QAAA,KAAK,EAAC,WAA/C;AAA2D,QAAA,OAAO,EAAE,MAAI,KAAKR,aAAL,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzCiC;;AA2CtC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAMN,eAAe,GAAGN,CAAC,CAACa,GAAF,CAAMD,KAAK,CAACE,oBAAZ,EAAiC,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnE,WAAO,EACL,GAAGD,GADE;AAELC,MAAAA,GAAG,EAAEA;AAFA,KAAP;AAID,GALqB,CAAxB;;AAOA,QAAMR,QAAQ,GAAGR,CAAC,CAACa,GAAF,CAAMD,KAAK,CAACK,aAAZ,EAA0B,CAACF,GAAD,EAAMC,GAAN,KAAc;AACrD,WAAO,EACL,GAAGD,GADE;AAELC,MAAAA,GAAG,EAAEA;AAFA,KAAP;AAID,GALc,CAAjB;;AAOA,SAAO;AACHV,IAAAA,eADG;AACaE,IAAAA;AADb,GAAP;AAGH,CAlBD;;AAoBA,eAAeT,OAAO,CAACY,eAAD,CAAP,CAAyBV,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nclass CheckLocation extends Component {\r\n    checklocation=()=>{\r\n        console.log(this.props.currentLocation.length)\r\n        console.log(this.props.Location.length)\r\n        if(this.props.Location.length==4&&this.props.currentLocation.length!==0){\r\n            alert('Pass')\r\n        }else{alert('Failed')}\r\n    //     if (this.state.location.length==4&&this.state.currentLocation.length!==0){\r\n    //     const SortLatitude=[];\r\n    //     const SortLongitude=[];\r\n    //     this.state.location\r\n    //     .sort(({ latitude: previousLaitude }, { latitude: currentLaitude }) => previousLaitude - currentLaitude)\r\n    //     .map((item)=>{\r\n    //        SortLatitude.push(item.latitude)\r\n    //     })\r\n    //     this.state.location\r\n    //     .sort(({ longitude: previousLongitude }, { longitude: currentLongitude }) => previousLongitude - currentLongitude)\r\n    //     .map((item)=>{\r\n    //        SortLongitude.push(item.longitude)\r\n    //     })\r\n    //     console.log('My Location latituide is '+this.state.currentLocation[0]+'longitude is '+this.state.currentLocation[0].longitude)\r\n    //     console.log('Shorest latitude is '+SortLatitude[0]+' far latitude is '+ SortLatitude[3])\r\n    //     console.log('Shorest long is '+SortLongitude[0]+' far long is '+ SortLongitude[3])\r\n    //    if (this.state.currentLocation[0].latitude>SortLatitude[0]&&\r\n    //        this.state.currentLocation[0].latitude<SortLatitude[3]&&\r\n    //        this.state.currentLocation[0].longitude>SortLongitude[0]&&\r\n    //        this.state.currentLocation[0].longitude<SortLongitude[3]) {\r\n    //          alert('Your position is close to the scope of the company.')\r\n    //      }else{\r\n    //          alert('Your position is not close to the scope of the company.')\r\n    //    }\r\n    // }else{\r\n    //     alert('Please add location or getLocation')\r\n    // }\r\n   }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button size='small' variant=\"contained\" color=\"secondary\" onClick={()=>this.checklocation()}>Check-Location</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const currentLocation = _.map(state.blogsCurrentLocation,(val, key) => {\r\n        return {\r\n          ...val,\r\n          key: key,\r\n        };\r\n      },\r\n    );\r\n    const Location = _.map(state.blogsLocation,(val, key) => {\r\n        return {\r\n          ...val,\r\n          key: key,\r\n        };\r\n      },\r\n    );\r\n    return {\r\n        currentLocation,Location\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckLocation);"]},"metadata":{},"sourceType":"module"}