{"ast":null,"code":"export default function (state = [], action) {\n  switch (action.type) {\n    case 'ADD_LOCATION':\n      return state.concat([action.payload]);\n\n    case 'EDIT_LOCATION':\n      return state.map(location => location.id === action.payload ? { ...location,\n        editing: !location.editing\n      } : location);\n\n    case 'UPDATE_LOCATION':\n      return state.map(location => {\n        if (location.id === action.id) {\n          return { ...location,\n            latitude: action.payload.newLatiude,\n            longitude: action.payload.newLongitude,\n            editing: !location.editing\n          };\n        } else return location;\n      });\n\n    case 'DELETE_LOCATION':\n      return state.filter(location => location.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["D:/Learning/React/Check-Location-App/src/reducers/LocationReducers.js"],"names":["state","action","type","concat","payload","map","location","id","editing","latitude","newLatiude","longitude","newLongitude","filter"],"mappings":"AAAA,eAAe,UAAUA,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA6B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,OAAR,CAAb,CAAP;;AACF,SAAK,eAAL;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAWC,QAAD,IAAYA,QAAQ,CAACC,EAAT,KAAcN,MAAM,CAACG,OAArB,GAA+B,EAAC,GAAGE,QAAJ;AAAcE,QAAAA,OAAO,EAAC,CAACF,QAAQ,CAACE;AAAhC,OAA/B,GAAwEF,QAA9F,CAAP;;AACF,SAAK,iBAAL;AACE,aAAON,KAAK,CAACK,GAAN,CAAWC,QAAD,IAAc;AAC7B,YAAIA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACM,EAA3B,EAA+B;AAC1B,iBAAO,EACH,GAAGD,QADA;AAEHG,YAAAA,QAAQ,EAAER,MAAM,CAACG,OAAP,CAAeM,UAFtB;AAGHC,YAAAA,SAAS,EAAEV,MAAM,CAACG,OAAP,CAAeQ,YAHvB;AAIHJ,YAAAA,OAAO,EAAE,CAACF,QAAQ,CAACE;AAJhB,WAAP;AAMH,SAPF,MAOQ,OAAOF,QAAP;AACX,OATQ,CAAP;;AAUF,SAAK,iBAAL;AACE,aAAON,KAAK,CAACa,MAAN,CAAcP,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACG,OAAlD,CAAP;;AACF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD;AAAA","sourcesContent":["export default function (state = [], action){\r\n    switch (action.type) {\r\n      case 'ADD_LOCATION':\r\n        return state.concat([action.payload])\r\n      case 'EDIT_LOCATION':\r\n        return state.map((location)=>location.id===action.payload ? {...location, editing:!location.editing}:location)\r\n      case 'UPDATE_LOCATION':\r\n        return state.map((location) => {\r\n          if (location.id === action.id) {\r\n               return {\r\n                   ...location,\r\n                   latitude: action.payload.newLatiude,\r\n                   longitude: action.payload.newLongitude,\r\n                   editing: !location.editing\r\n               }\r\n           } else return location;\r\n      })\r\n      case 'DELETE_LOCATION':\r\n        return state.filter((location) => location.id !== action.payload);\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}