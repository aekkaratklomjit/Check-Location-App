{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\check-location\\\\src\\\\screens\\\\homscreens.js\";\nimport React, { Component } from 'react';\nimport './../App.css';\nimport Location from './Location';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class homscreens extends Component {\n  constructor(props) {\n    super(props);\n\n    this.add = event => {\n      event.preventDefault(); //console.log(this.state.location);\n      // console.log(this.state.location.length)\n\n      if (this.state.location.length < 4) {\n        const data = {\n          id: Date.now(),\n          latitude: event.target.latitude.value,\n          longitude: event.target.longitude.value\n        };\n        this.setState({\n          location: [...this.state.location, data]\n        });\n      } else {\n        alert('Error');\n      }\n    };\n\n    this.delete = id => {\n      console.log(id); // this.setState({location:[...this.state.location,data]})\n\n      this.setState({\n        location: this.state.location.filter(i => i.id !== id)\n      });\n    };\n\n    this.getLocation = async () => {\n      let promise = new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      let pos = await promise;\n      let data = {\n        id: Date.now(),\n        longitude: pos.coords.longitude,\n        latitude: pos.coords.latitude\n      };\n      this.setState({\n        currentLocation: [data]\n      });\n    };\n\n    this.checklocation = () => {\n      if (this.state.location.length == 4 && this.state.currentLocation.length == 0) {\n        const latitude1 = [];\n        const longitude1 = [];\n        this.state.location.sort(({\n          latitude: previousID\n        }, {\n          latitude: currentID\n        }) => previousID - currentID).map(latitude => {\n          latitude1.push(latitude);\n        });\n        this.state.location.sort(({\n          longitude: previousID\n        }, {\n          longitude: currentID\n        }) => previousID - currentID).map(longitude => {\n          longitude1.push(longitude);\n        }); //     console.log('Current',this.state.currentLocation[0].latitude)\n        //     console.log(latitude1[0].latitude,latitude1[3].latitude,longitude1[0].longitude,longitude1[3].longitude)\n\n        if (latitude1[0].latitude > 0 && latitude1[3].latitude < 1000) {\n          alert('complete');\n        } else {\n          alert('faild');\n        }\n      } else {\n        alert('Please add location or getLocation');\n      }\n    };\n\n    this.state = {\n      id: 1,\n      location: [],\n      currentLocation: []\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.location.length);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Check-Location Web App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.add,\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              paddingLeft: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Latitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Longitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      name: \"longitude\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      name: \"longitude\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      value: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Latitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Longitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.location.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.latitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.longitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.delete(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 24\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 20\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getLocation(),\n        children: \"Getlocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), this.state.currentLocation.map(item => /*#__PURE__*/_jsxDEV(Location, {\n        latitude: item.latitude,\n        longitude: item.longitude,\n        click: () => this.delete(item.id)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.checklocation(),\n        children: \"Check-Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Learning/React/check-location/src/screens/homscreens.js"],"names":["React","Component","Location","Button","homscreens","constructor","props","add","event","preventDefault","state","location","length","data","id","Date","now","latitude","target","value","longitude","setState","alert","delete","console","log","filter","i","getLocation","promise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","currentLocation","checklocation","latitude1","longitude1","sort","previousID","currentID","map","push","componentDidUpdate","render","paddingTop","paddingLeft","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './../App.css';\r\nimport Location from './Location';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nexport default class homscreens extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:1,\r\n            location:[],\r\n            currentLocation:[],\r\n        };\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.state.location.length)\r\n    }\r\n    add=(event)=>{\r\n        event.preventDefault();\r\n        //console.log(this.state.location);\r\n        // console.log(this.state.location.length)\r\n        if (this.state.location.length<4) {\r\n            const data ={\r\n                id:Date.now(),\r\n                latitude:event.target.latitude.value,\r\n                longitude:event.target.longitude.value\r\n            }\r\n            this.setState({location:[...this.state.location,data]})\r\n        }else{\r\n            alert('Error')\r\n        }\r\n    }\r\n\r\n    delete=(id)=>{\r\n        console.log(id)\r\n        // this.setState({location:[...this.state.location,data]})\r\n        this.setState({location: this.state.location.filter((i)=>i.id !== id)})\r\n    }\r\n    getLocation=async()=>{\r\n        let promise = new Promise(function (resolve, reject) {\r\n            navigator.geolocation.getCurrentPosition(resolve, reject);\r\n          });\r\n          let pos = await promise;\r\n          let data ={\r\n            id:Date.now(), \r\n            longitude: pos.coords.longitude,\r\n            latitude: pos.coords.latitude\r\n          }\r\n          this.setState({currentLocation:[data]})\r\n    }\r\n    checklocation=()=>{\r\n         if (this.state.location.length==4&&this.state.currentLocation.length==0){\r\n         const latitude1=[];\r\n         const longitude1=[];\r\n         this.state.location\r\n         .sort(({ latitude: previousID }, { latitude: currentID }) => previousID - currentID)\r\n         .map((latitude)=>{\r\n             latitude1.push(latitude)\r\n         })\r\n         this.state.location\r\n         .sort(({ longitude: previousID }, { longitude: currentID }) => previousID - currentID)\r\n         .map((longitude)=>{\r\n             longitude1.push(longitude)\r\n         })\r\n    //     console.log('Current',this.state.currentLocation[0].latitude)\r\n    //     console.log(latitude1[0].latitude,latitude1[3].latitude,longitude1[0].longitude,longitude1[3].longitude)\r\n         if (latitude1[0].latitude>0&&latitude1[3].latitude<1000) {\r\n             alert('complete')\r\n         }else{\r\n             alert('faild')\r\n         }\r\n     }else{\r\n         alert('Please add location or getLocation')\r\n     }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div style={{paddingTop:20}}>\r\n                    <h1>Check-Location Web App</h1>\r\n                </div>\r\n                <div style={{paddingTop:15}}>\r\n                <form onSubmit={this.add}>\r\n                <table style={{paddingLeft:20}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Latitude</th>\r\n                            <th>Longitude</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><label><input type=\"number\" name=\"longitude\" /></label></td>\r\n                            <td><label><input type=\"number\" name=\"longitude\" /></label></td>\r\n                            <td><label><input type=\"submit\" value=\"Submit\" /></label></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                </form>\r\n                {/* <form onSubmit={this.add}>\r\n                    <h1>Latitude Longitude</h1>\r\n                    <label>\r\n                    <input type=\"number\" name=\"latitude\" />\r\n                    </label>\r\n                    <label>\r\n                    <input type=\"number\" name=\"longitude\" />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form> */}\r\n                </div>\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Latitude</th>\r\n                        <th>Longitude</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.location.map((item) => (\r\n                   <tr key={item.id}>\r\n                       <td>{item.latitude}</td>\r\n                       <td>{item.longitude}</td>\r\n                       <td><button onClick={()=>this.delete(item.id)}>Delete</button></td>\r\n                   </tr>\r\n                ))}\r\n                </tbody>\r\n                </table>\r\n                \r\n                {/* {this.state.location.map((item) => (\r\n                    <Location latitude={item.latitude} longitude={item.longitude} key={item.id} click={()=>this.delete(item.id)}/>\r\n                ))} */}\r\n                <button onClick={()=>this.getLocation()}>\r\n                    Getlocation\r\n                </button>\r\n                {this.state.currentLocation.map((item) => (\r\n                    <Location latitude={item.latitude} longitude={item.longitude} key={item.id} click={()=>this.delete(item.id)}/>\r\n                ))}\r\n                <button onClick={()=>this.checklocation()}>\r\n                    Check-Location\r\n                </button>\r\n                {/* <h2>{this.state.currentLocation[0].latitude}{this.state.currentLocation[0].longitude}</h2> */}\r\n\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}