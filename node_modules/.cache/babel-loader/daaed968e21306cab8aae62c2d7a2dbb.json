{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\check-location\\\\src\\\\screens\\\\CheckLocation.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckLocation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checklocation = () => {\n      if (this.state.location.length == 4 && this.state.currentLocation.length !== 0) {\n        const SortLatitude = [];\n        const SortLongitude = [];\n        this.state.location.sort(({\n          latitude: previousLaitude\n        }, {\n          latitude: currentLaitude\n        }) => previousLaitude - currentLaitude).map(item => {\n          SortLatitude.push(item.latitude);\n        });\n        this.state.location.sort(({\n          longitude: previousLongitude\n        }, {\n          longitude: currentLongitude\n        }) => previousLongitude - currentLongitude).map(item => {\n          SortLongitude.push(item.longitude);\n        });\n        console.log('My Location latituide is ' + this.state.currentLocation[0] + 'longitude is ' + this.state.currentLocation[0].longitude);\n        console.log('Shorest latitude is ' + SortLatitude[0] + ' far latitude is ' + SortLatitude[3]);\n        console.log('Shorest long is ' + SortLongitude[0] + ' far long is ' + SortLongitude[3]);\n\n        if (this.state.currentLocation[0].latitude > SortLatitude[0] && this.state.currentLocation[0].latitude < SortLatitude[3] && this.state.currentLocation[0].longitude > SortLongitude[0] && this.state.currentLocation[0].longitude < SortLongitude[3]) {\n          alert('Your position is close to the scope of the company.');\n        } else {\n          alert('Your position is not close to the scope of the company.');\n        }\n      } else {\n        alert('Please add location or getLocation');\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => this.checklocation(),\n        children: \"Check-Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const currentLocation = _.map(state.blogsCurrentLocation, (val, key) => {\n    return { ...val,\n      key: key\n    };\n  });\n\n  const Location = _.map(state.blogsLocation, (val, key) => {\n    return { ...val,\n      key: key\n    };\n  });\n\n  return {\n    currentLocation,\n    Location\n  };\n};\n\nexport default connect(mapStateToProps)(CheckLocation);","map":{"version":3,"sources":["D:/Learning/React/check-location/src/screens/CheckLocation.js"],"names":["React","Component","Button","connect","_","CheckLocation","checklocation","state","location","length","currentLocation","SortLatitude","SortLongitude","sort","latitude","previousLaitude","currentLaitude","map","item","push","longitude","previousLongitude","currentLongitude","console","log","alert","render","mapStateToProps","blogsCurrentLocation","val","key","Location","blogsLocation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nclass CheckLocation extends Component {\r\n    checklocation=()=>{\r\n        if (this.state.location.length==4&&this.state.currentLocation.length!==0){\r\n        const SortLatitude=[];\r\n        const SortLongitude=[];\r\n        this.state.location\r\n        .sort(({ latitude: previousLaitude }, { latitude: currentLaitude }) => previousLaitude - currentLaitude)\r\n        .map((item)=>{\r\n           SortLatitude.push(item.latitude)\r\n        })\r\n        this.state.location\r\n        .sort(({ longitude: previousLongitude }, { longitude: currentLongitude }) => previousLongitude - currentLongitude)\r\n        .map((item)=>{\r\n           SortLongitude.push(item.longitude)\r\n        })\r\n        console.log('My Location latituide is '+this.state.currentLocation[0]+'longitude is '+this.state.currentLocation[0].longitude)\r\n        console.log('Shorest latitude is '+SortLatitude[0]+' far latitude is '+ SortLatitude[3])\r\n        console.log('Shorest long is '+SortLongitude[0]+' far long is '+ SortLongitude[3])\r\n       if (this.state.currentLocation[0].latitude>SortLatitude[0]&&\r\n           this.state.currentLocation[0].latitude<SortLatitude[3]&&\r\n           this.state.currentLocation[0].longitude>SortLongitude[0]&&\r\n           this.state.currentLocation[0].longitude<SortLongitude[3]) {\r\n             alert('Your position is close to the scope of the company.')\r\n         }else{\r\n             alert('Your position is not close to the scope of the company.')\r\n       }\r\n    }else{\r\n        alert('Please add location or getLocation')\r\n    }\r\n   }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button size='small' variant=\"contained\" color=\"secondary\" onClick={()=>this.checklocation()}>Check-Location</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const currentLocation = _.map(state.blogsCurrentLocation,(val, key) => {\r\n        return {\r\n          ...val,\r\n          key: key,\r\n        };\r\n      },\r\n    );\r\n    const Location = _.map(state.blogsLocation,(val, key) => {\r\n        return {\r\n          ...val,\r\n          key: key,\r\n        };\r\n      },\r\n    );\r\n    return {\r\n        currentLocation,Location\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckLocation);"]},"metadata":{},"sourceType":"module"}